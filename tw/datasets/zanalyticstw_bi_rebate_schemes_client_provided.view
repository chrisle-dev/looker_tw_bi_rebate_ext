# The name of this view in Looker is "Zanalyticstw Bi Rebate Schemes Client Provided"
view: zanalyticstw_bi_rebate_schemes_client_provided {
  # The sql_table_name parameter indicates the underlying database table
  # to be used for all fields in this view.

  derived_table: {
    sql: select * from `zp-dev-looker-analytics.infrared.zanalytics-TW_BI_Rebate_Schemes_Client_Provided` ;;
  }

  dimension: action {
    type: string
    sql: ${TABLE}.action ;;
  }

  dimension: bq_table_row_id {
    type: string
    sql: ${TABLE}.bq_table_row_id ;;
  }

  dimension: bundle_effective_period {
    type: string
    sql: ${TABLE}.bundle_effective_period ;;
  }

  dimension: contract_name_select {
    label: "Contract Name (Select)"
    type: string
    sql: ${TABLE}.contract_name_select ;;
  }

  dimension: contract_period {
    type: string
    sql: ${TABLE}.contract_period ;;
  }

  dimension: country1 {
    type: string
    sql: ${TABLE}.country1 ;;
  }

  dimension: country_id {
    type: number
    sql: ${TABLE}.country_id ;;
  }

  dimension: country_x {
    type: string
    sql: ${TABLE}.country_x ;;
  }

  dimension: customer_name_select {
    label: "Customer Name (Select)"
    type: string
    sql: ${TABLE}.customer_name_select ;;
  }

  dimension: disc_percentage {
    type: number
    sql: cast(${TABLE}.disc_percentage as float64) ;;
  }

  dimension: exc_customer_name {
    type: string
    sql: ${TABLE}.exc_customer_name ;;
  }

  dimension: fixed_amount {
    type: number
    sql: cast(${TABLE}.fixed_amount as float64) ;;
  }

  dimension: total_disc_pct {
    type: number
    sql: case when ${fixed_amount} = 0 then coalesce(safe_cast(${disc_percentage} as float64),0) +  coalesce(safe_cast(${rebate_percentage} as float64),0) else 0 end ;;
  }

  # A measure is a field that uses a SQL aggregate function. Here are defined sum and average
  # measures for this dimension, but you can also add measures of many different aggregates.
  # Click on the type parameter to see all the options in the Quick Help panel on the right.

  measure: total_fixed_amount {
    type: sum
    sql: ${fixed_amount} ;;  }
  measure: average_fixed_amount {
    type: average
    sql: ${fixed_amount} ;;  }

  dimension: frequency {
    type: string
    sql: ${TABLE}.frequency ;;
  }

  dimension: initial_balance {
    type: number
    sql: ${TABLE}.initial_balance ;;
  }

  dimension: oneoff_contract_y {
    label: "One-Off contract (Y)"
    type: string
    sql: ${TABLE}.oneoff_contract_y ;;
  }

  dimension: pg_select {
    label: "PG (Select)"
    type: string
    sql: ${TABLE}.pg_select ;;
  }

  dimension: principalcode_odbc_proxy {
    type: string
    sql: ${TABLE}.principalcode_odbc_proxy ;;
  }

  dimension: rebate_description {
    type: string
    sql: ${TABLE}.rebate_description ;;
  }

  dimension: rebate_execution_plan_yyyymm31 {
    type: string
    sql: ${TABLE}.rebate_execution_plan_yyyymm31 ;;
  }

  dimension: rebate_percentage {
    type: number
    sql: cast(${TABLE}.rebate_percentage as float64) ;;
  }

  dimension: rebate_scheme_id {
    type: string
    sql: ${TABLE}.rebate_scheme_id ;;
  }

  dimension: rebate_scheme_id_sort {
    type: number
    sql: cast(right(${TABLE}.rebate_scheme_id, length(${TABLE}.rebate_scheme_id) -1) as int64) ;;
  }


  dimension: salesorg1 {
    type: string
    sql: ${TABLE}.salesorg1 ;;
  }

  dimension: salesorg_x {
    type: number
    sql: ${TABLE}.salesorg_x ;;
  }
  # Dates and timestamps can be represented in Looker using a dimension group of type: time.
  # Looker converts dates and timestamps to the specified timeframes within the dimension group.

  dimension_group: save_date {
    type: time
    timeframes: [raw, date, week, month, quarter, year]
    convert_tz: no
    datatype: date
    sql: ${TABLE}.save_date ;;
  }

  dimension: save_datetime {
    type: string
    sql: ${TABLE}.save_datetime ;;
  }

  dimension: save_time {
    type: string
    sql: ${TABLE}.save_time ;;
  }

  dimension: sku_select {
    label: "SKU (Select)"
    type: string
    sql: ${TABLE}.sku_select ;;
  }

  dimension: to_accrue_y {
    label: "To Accrue (Y)"
    type: string
    sql: ${TABLE}.to_accrue_y ;;
  }

  dimension: zp_notes {
    type: string
    sql: ${TABLE}.zp_notes ;;
  }
  measure: count {
    type: count
    drill_fields: [exc_customer_name]
  }
  measure: sum_disc_pct {
    label: "Disc%"
    type: sum
    sql: ${disc_percentage} ;;
    value_format: "0.00%"
  }
  measure: sum_rebate_pct {
    label: "Rebate%"
    type: sum
    sql: ${rebate_percentage} ;;
    value_format: "0.00%"
  }
  measure: sum_fixed_amount {
    label: "Fixed Amount"
    type: sum
    sql: ${fixed_amount} ;;
    value_format: "#,##0"
  }
  measure: sum_total_disc_pct {
    label: "Total Disc%"
    type: sum
    sql: ${total_disc_pct} ;;
    value_format: "0.00%"
  }
}
